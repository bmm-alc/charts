apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "ssh.fullname" . }}
  labels:
    {{- include "ssh.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "ssh.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "ssh.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "ssh.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: ssh
              containerPort: 2222
              protocol: TCP
          livenessProbe:
            tcpSocket:
              port: ssh
          readinessProbe:
            tcpSocket:
              port: ssh
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          env:
          - name: PUID
            value: "1000"
          - name: PGID
            value: "1000"
            #- PUBLIC_KEY=yourpublickey #optional
            #- PUBLIC_KEY_FILE=/path/to/file #optional
            #- PUBLIC_KEY_DIR=/path/to/directory/containing/_only_/pubkeys #optional
            #- SUDO_ACCESS=false #optional
          - name: PASSWORD_ACCESS
            value: "true"
          - name: USER_PASSWORD
            valueFrom:
              secretKeyRef:
                name: credentials
                key: password
            #- USER_PASSWORD_FILE=/path/to/file #optional
          - name: USER_NAME
            valueFrom:
              secretKeyRef:
                name: credentials
                key: username
          volumeMounts:
          - name: home
            mountPath: /config
          - name: custom-scripts
            mountPath: /config/custom-cont-init.d
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
        - name: home
          persistentVolumeClaim:
            claimName: home
        - name: custom-scripts
          configMap:
            name: custom-scripts
